tesla_package:
  automation:
    # dynamic polling frequency
    - alias: Tesla set polling time short on startup if charger is connected
      description: When HA starts up. We adjust the Polling Interval down from the configured value if we are connected to a charger
      trigger:
        - platform: homeassistant
          event: start
      condition:
        - condition: state
          entity_id: binary_sensor.deurim_charging
          state: "on"
      action:
        - delay: '00:01:00'
        - service: tesla_custom.polling_interval
          data:
            vin: "{{ state_attr('binary_sensor.deurim_online','vin') }}"
            scan_interval: 30

    - alias: Tesla set polling time short on startup if car is driving
      description: When HA starts up. We adjust the Polling Interval down from the configured value if we are driving
      trigger:
        - platform: homeassistant
          event: start
      condition:
        - condition: state
          entity_id: binary_sensor.deurim_parking_brake
          state: "off"
      action:
        - delay: '00:01:00'
        - service: tesla_custom.polling_interval
          data:
            vin: "{{ state_attr('binary_sensor.deurim_online','vin') }}"
            scan_interval: 30

    - alias: Tesla set polling time short when charger is connected
      description: We adjust the Polling Interval down from the configured value if we are connecting to a charger
      trigger:
        - platform: state
          entity_id: binary_sensor.deurim_charging
          to: "on"
      action:
        - service: tesla_custom.polling_interval
          data:
            vin: "{{ state_attr('binary_sensor.deurim_online','vin') }}"
            scan_interval: 30

    - alias: Tesla set polling time long when charger is disconnected
      description: We adjust the Polling Interval up to the configured value if we are disconnecting from the charger
      trigger:
        - platform: state
          entity_id: binary_sensor.deurim_charging
          to: "off"
          for: "00:15:00"
      condition:
        - condition: state
          entity_id: binary_sensor.deurim_parking_brake
          state: "on"
      action:
        - service: tesla_custom.polling_interval
          data:
            vin: "{{ state_attr('binary_sensor.deurim_online','vin') }}"
            scan_interval: 660

    - alias: Tesla set polling time short when car is driving
      description: We adjust the Polling Interval down from the configured value if we are driving
      trigger:
        - platform: state
          entity_id: binary_sensor.deurim_parking_brake
          to: "off"
      action:
        - service: tesla_custom.polling_interval
          data:
            vin: "{{ state_attr('binary_sensor.deurim_online','vin') }}"
            scan_interval: 30

    - alias: Tesla set polling time long when car is parked
      description: We adjust the Polling Interval up to the configured value when we are parked if the charger is not connected
      trigger:
        - platform: state
          entity_id: binary_sensor.deurim_parking_brake
          to: "on"
          for: "00:15:00"
      condition:
        - condition: state
          entity_id: binary_sensor.deurim_charging
          state: "off"
      action:
        - service: tesla_custom.polling_interval
          data:
            vin: "{{ state_attr('binary_sensor.deurim_online','vin') }}"
            scan_interval: 660

    - id: "notify_tesla_update_available"
      alias: Notify tesla update available
      trigger:
        - platform: state
          entity_id:
            - update.deurim_software_update
          attribute: latest_version
      condition:
        - "{{ state_attr('update.deurim_software_update','installed_version') != state_attr('update.deurim_software_update','latest_version') }}"
      action:
        - service: notify.notify_telegram
          data:
            title: "🆕 새로운 테슬라 소프트웨어 업데이트 알림"
            message: "현재 버전은 {{state_attr('update.deurim_software_update','installed_version')}} 입니다. 새로운 버전 {{state_attr('update.deurim_software_update','latest_version')}} 으로 업데이트 하세요."

    - id: "notify_tesla_geofence_home"
      alias: Notify tesla geofence home
      trigger:
        - platform: state
          entity_id: device_tracker.deurim_location_tracker
          to: "Home"
      action:
        - service: notify.notify_telegram
          data:
            title: "🚘 드림이 집 도착"
            message: "드림이의 위치가 집 근처로 확인됩니다."

    - id: "notify_tesla_geofence_away"
      alias: Notify tesla geofence away
      trigger:
        - platform: state
          entity_id: device_tracker.deurim_location_tracker
          from: "Home"
      action:
        - service: notify.notify_telegram
          data:
            title: "🚘 드림이 집 출발"
            message: "드림이의 위치가 집에서 벗어났습니다."

    - id: "notify_tesla_charge_cable_on"
      alias: Notify tesla charge cable on
      trigger:
        - platform: state
          entity_id: binary_sensor.deurim_charging
          from: "off"
          to: "on"
      action:
        - service: notify.notify_telegram
          data:
            title: "🚘 드림이 충전 알림"
            message: "충전이 시작되었습니다. 충전 한도는 {{ states('number.deurim_charge_limit') }} % 이고 완료까지 {{ states('sensor.deurim_time_charge_complete') }} 시간 남았습니다."

    - id: "notify_tesla_charge_cable_off"
      alias: Notify tesla charge cable off
      trigger:
        - platform: state
          entity_id: binary_sensor.deurim_charging
          from: "on"
          to: "off"
      action:
        - service: notify.notify_telegram
          data:
            title: "🚘 드림이 충전 알림"
            message: "충전이 완료되었습니다. 총 충전된 양은 {{ states('sensor.deurim_energy_added') }} kWh 입니다."
